{"ast":null,"code":"export function fetchProfileData() {\n  var userPromise = fetchUser();\n  var postsPromise = fetchPosts();\n  return {\n    user: wrapPromise(userPromise),\n    posts: wrapPromise(postsPromise)\n  };\n} // Suspense integrations like Relay implement\n// a contract like this to integrate with React.\n// Real implementations can be significantly more complex.\n// Don't copy-paste this into your project!\n\nfunction wrapPromise(promise) {\n  var status = \"pending\";\n  var result;\n  var suspender = promise.then(function (r) {\n    status = \"success\";\n    result = r;\n  }, function (e) {\n    status = \"error\";\n    result = e;\n  });\n  return {\n    read: function read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n}\n\nfunction fetchUser() {\n  console.log(\"fetch user...\");\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      console.log(\"fetched user\");\n      resolve({\n        name: \"Ringo Starr\"\n      });\n    }, 1000);\n  });\n}\n\nfunction fetchPosts() {\n  console.log(\"fetch posts...\");\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      console.log(\"fetched posts\");\n      resolve([{\n        id: 0,\n        text: \"I get by with a little help from my friends\"\n      }, {\n        id: 1,\n        text: \"I'd like to be under the sea in an octupus's garden\"\n      }, {\n        id: 2,\n        text: \"You got that sand all over your feet\"\n      }]);\n    }, 1100);\n  });\n}","map":{"version":3,"sources":["/Users/linjinsheng/Desktop/01-前端面试/bztrp/src/fakeApi.js"],"names":["fetchProfileData","userPromise","fetchUser","postsPromise","fetchPosts","user","wrapPromise","posts","promise","status","result","suspender","then","r","e","read","console","log","Promise","resolve","setTimeout","name","id","text"],"mappings":"AAAA,OAAO,SAASA,gBAAT,GAA4B;AACjC,MAAIC,WAAW,GAAGC,SAAS,EAA3B;AACA,MAAIC,YAAY,GAAGC,UAAU,EAA7B;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEC,WAAW,CAACL,WAAD,CADZ;AAELM,IAAAA,KAAK,EAAED,WAAW,CAACH,YAAD;AAFb,GAAP;AAID,C,CAED;AACA;AACA;AACA;;AACA,SAASG,WAAT,CAAqBE,OAArB,EAA8B;AAC5B,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,MAAJ;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACI,IAAR,CACd,UAACC,CAAD,EAAO;AACLJ,IAAAA,MAAM,GAAG,SAAT;AACAC,IAAAA,MAAM,GAAGG,CAAT;AACD,GAJa,EAKd,UAACC,CAAD,EAAO;AACLL,IAAAA,MAAM,GAAG,OAAT;AACAC,IAAAA,MAAM,GAAGI,CAAT;AACD,GARa,CAAhB;AAUA,SAAO;AACLC,IAAAA,IADK,kBACE;AACL,UAAIN,MAAM,KAAK,SAAf,EAA0B;AACxB,cAAME,SAAN;AACD,OAFD,MAEO,IAAIF,MAAM,KAAK,OAAf,EAAwB;AAC7B,cAAMC,MAAN;AACD,OAFM,MAEA,IAAID,MAAM,KAAK,SAAf,EAA0B;AAC/B,eAAOC,MAAP;AACD;AACF;AATI,GAAP;AAWD;;AAED,SAASR,SAAT,GAAqB;AACnBc,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BC,IAAAA,UAAU,CAAC,YAAM;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAE,MAAAA,OAAO,CAAC;AACNE,QAAAA,IAAI,EAAE;AADA,OAAD,CAAP;AAGD,KALS,EAKP,IALO,CAAV;AAMD,GAPM,CAAP;AAQD;;AAED,SAASjB,UAAT,GAAsB;AACpBY,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BC,IAAAA,UAAU,CAAC,YAAM;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAE,MAAAA,OAAO,CAAC,CACN;AACEG,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADM,EAKN;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE;AAFR,OALM,EASN;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE;AAFR,OATM,CAAD,CAAP;AAcD,KAhBS,EAgBP,IAhBO,CAAV;AAiBD,GAlBM,CAAP;AAmBD","sourcesContent":["export function fetchProfileData() {\n  let userPromise = fetchUser();\n  let postsPromise = fetchPosts();\n  return {\n    user: wrapPromise(userPromise),\n    posts: wrapPromise(postsPromise)\n  };\n}\n\n// Suspense integrations like Relay implement\n// a contract like this to integrate with React.\n// Real implementations can be significantly more complex.\n// Don't copy-paste this into your project!\nfunction wrapPromise(promise) {\n  let status = \"pending\";\n  let result;\n  let suspender = promise.then(\n    (r) => {\n      status = \"success\";\n      result = r;\n    },\n    (e) => {\n      status = \"error\";\n      result = e;\n    }\n  );\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n}\n\nfunction fetchUser() {\n  console.log(\"fetch user...\");\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log(\"fetched user\");\n      resolve({\n        name: \"Ringo Starr\"\n      });\n    }, 1000);\n  });\n}\n\nfunction fetchPosts() {\n  console.log(\"fetch posts...\");\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log(\"fetched posts\");\n      resolve([\n        {\n          id: 0,\n          text: \"I get by with a little help from my friends\"\n        },\n        {\n          id: 1,\n          text: \"I'd like to be under the sea in an octupus's garden\"\n        },\n        {\n          id: 2,\n          text: \"You got that sand all over your feet\"\n        }\n      ]);\n    }, 1100);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}